plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.2'
	id 'io.spring.dependency-management' version '1.1.7'
}

group = 'ytclone'
version = '0.0.1-SNAPSHOT'

java {
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.minio:minio:8.5.17'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.mariadb.jdbc:mariadb-java-client'
	implementation 'io.github.cdimascio:dotenv-java:3.0.0'
	implementation 'net.datafaker:datafaker:2.4.2'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named("bootRun") {
	systemProperty "spring.profiles.active", "dev"
}

tasks.withType(JavaExec).configureEach {
	jvmArgs += [
					"-Dspring.devtools.restart.enabled=true",
					"-Dspring.devtools.livereload.enabled=true"
	]
}

tasks.named('test') {
	useJUnitPlatform()
}
